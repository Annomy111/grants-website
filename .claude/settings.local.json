{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npm start)",
      "Bash(sips:*)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(cp:*)",
      "Bash(sqlite3:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(curl:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(kill:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(npx:*)",
      "Bash(netlify:*)",
      "Bash(npm run build:*)",
      "Bash(\"/Users/winzendwyers/grants website/deploy-script.sh\")",
      "Bash(export:*)",
      "Bash(supabase:*)",
      "Bash(jq:*)",
      "Bash(SUPABASE_URL=https://adpddtbsstunjotxaldb.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkcGRkdGJzc3R1bmpvdHhhbGRiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDUyNDQyNiwiZXhwIjoyMDU2MTAwNDI2fQ.Kk7UCYqa543oR7W0MRPHqytv8LBhbaq_zaMf32n2ZjM node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\n\nconst supabase = createClient(\n  process.env.SUPABASE_URL,\n  process.env.SUPABASE_SERVICE_ROLE_KEY\n);\n\nasync function checkGrants() {\n  try {\n    const { data, error } = await supabase\n      .from(''grants'')\n      .select(''grant_name, website_link, funding_organization'')\n      .limit(3);\n    \n    if (error) {\n      console.error(''Error:'', error);\n      return;\n    }\n    \n    console.log(''Current grants in database:'');\n    data.forEach((grant, index) => {\n      console.log(\\`\\nGrant ${index + 1}:\\`);\n      console.log(\\`  Name: ${grant.grant_name}\\`);\n      console.log(\\`  Organization: ${grant.funding_organization}\\`);\n      console.log(\\`  Website: ${grant.website_link}\\`);\n    });\n    \n    // Check total count\n    const { count } = await supabase\n      .from(''grants'')\n      .select(''*'', { count: ''exact'', head: true });\n    \n    console.log(\\`\\nTotal grants in database: ${count}\\`);\n  } catch (error) {\n    console.error(''Failed:'', error.message);\n  }\n}\n\ncheckGrants();\n\")",
      "Bash(SUPABASE_URL=https://adpddtbsstunjotxaldb.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkcGRkdGJzc3R1bmpvdHhhbGRiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDUyNDQyNiwiZXhwIjoyMDU2MTAwNDI2fQ.Kk7UCYqa543oR7W0MRPHqytv8LBhbaq_zaMf32n2ZjM node import-grants.js)",
      "Bash(SUPABASE_URL=https://adpddtbsstunjotxaldb.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkcGRkdGJzc3R1bmpvdHhhbGRiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDUyNDQyNiwiZXhwIjoyMDU2MTAwNDI2fQ.Kk7UCYqa543oR7W0MRPHqytv8LBhbaq_zaMf32n2ZjM node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\n\nconst supabase = createClient(\n  process.env.SUPABASE_URL,\n  process.env.SUPABASE_SERVICE_ROLE_KEY\n);\n\nasync function verifyEnhancements() {\n  try {\n    // Check specific enhanced fields\n    const { data, error } = await supabase\n      .from(''grants'')\n      .select(''grant_name, website_link, program_type, keywords, target_beneficiaries, geographical_scope'')\n      .limit(3);\n    \n    if (error) {\n      console.error(''Error:'', error);\n      return;\n    }\n    \n    console.log(''🔍 Enhanced Database Verification:'');\n    console.log(''====================================='');\n    \n    data.forEach((grant, index) => {\n      console.log(\\`\\n${index + 1}. ${grant.grant_name}\\`);\n      console.log(\\`   Program Type: ${grant.program_type}\\`);\n      console.log(\\`   Clean Website: ${grant.website_link}\\`);\n      console.log(\\`   Keywords: ${grant.keywords ? grant.keywords.join('', '') : ''None''}\\`);\n      console.log(\\`   Geographic Scope: ${grant.geographical_scope}\\`);\n      console.log(\\`   Target Beneficiaries: ${grant.target_beneficiaries}\\`);\n    });\n    \n    // Check for clean URLs (no prefixes)\n    const { data: urlCheck } = await supabase\n      .from(''grants'')\n      .select(''website_link'')\n      .not(''website_link'', ''is'', null)\n      .limit(10);\n    \n    console.log(\\`\\n\\n🔗 Website Link Quality Check:\\`);\n    console.log(''================================'');\n    const cleanUrls = urlCheck.filter(g => g.website_link && g.website_link.startsWith(''http''));\n    console.log(\\`Clean URLs: ${cleanUrls.length}/${urlCheck.length}\\`);\n    \n    urlCheck.slice(0, 5).forEach(grant => {\n      console.log(\\`   ${grant.website_link}\\`);\n    });\n    \n  } catch (error) {\n    console.error(''Failed:'', error.message);\n  }\n}\n\nverifyEnhancements();\n\")",
      "Bash(SUPABASE_URL=https://adpddtbsstunjotxaldb.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkcGRkdGJzc3R1bmpvdHhhbGRiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDUyNDQyNiwiZXhwIjoyMDU2MTAwNDI2fQ.Kk7UCYqa543oR7W0MRPHqytv8LBhbaq_zaMf32n2ZjM node analyze-missing-details.js)",
      "Bash(SUPABASE_URL=https://adpddtbsstunjotxaldb.supabase.co SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFkcGRkdGJzc3R1bmpvdHhhbGRiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDUyNDQyNiwiZXhwIjoyMDU2MTAwNDI2fQ.Kk7UCYqa543oR7W0MRPHqytv8LBhbaq_zaMf32n2ZjM node enhance-with-web-data.js)",
      "Bash(cat:*)",
      "Bash(convert:*)",
      "Bash(wget:*)",
      "Bash(zip:*)",
      "Bash(npm search supabase mcp)",
      "Bash(env)",
      "Bash(git push:*)",
      "Bash(npm search:*)",
      "Bash(NETLIFY_SKIP_EXTENSION_INSTALL=true netlify deploy --prod --dir=build)",
      "Bash(NETLIFY_SKIP_FUNCTIONS_CACHE=true netlify deploy --prod --skip-functions-cache --timeout 300)",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(git branch:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh repo view:*)",
      "Bash(open tests/mobile-test-report.html)",
      "Bash(source .env)",
      "Bash(npm run test:supabase:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "puppeteer"
  ]
}